server {
  listen 443 ssl;

  server_name api.nexster.xyz;

  ssl_certificate /etc/nginx/ssl/api_nexster_xyz_chain.crt;
  ssl_certificate_key /etc/nginx/ssl/api_nexster_xyz.key;

  # test uri which is not used in nexster apis
  location /test {
        proxy_pass http://localhost:8000/usrmgmt/test;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /space/test {
        proxy_pass http://localhost:8003/space/test;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # fetch recent posts for public timeline
  location ~ ^/recent_posts/(?<userid>[^/]+) {
	proxy_pass http://localhost:8001/timeline/recent_posts/$userid?$args;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # to my posts for private timeline. (viewer==owner)
  location ~ ^/my_posts/(?<userid>[^/]+) {
        proxy_pass http://localhost:8001/timeline/my_posts/$userid?$args;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   }

  # list friend suggestions for userid
  location /friend_sugs {
        proxy_pass http://localhost:8001/timeline/friend_sugs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # create reactions (POST)
  location /reactions {
      # Add configuration for POST requests
      proxy_pass http://localhost:8001/timeline/reactions;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
 
  # update reactions (PUT)
  location ~ ^/reactions/(?<reaction_id>[^/]+) {
      # Add configuration for PUT requests
      proxy_pass http://localhost:8001/timeline/reactions/$reaction_id?$args;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # test api - set cookie (remove once done the development)
   location /set-cookie {
      proxy_pass http://localhost:8000/usrmgmt/set-cookie;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

   # Get User Info (GET)
  location ~ ^/u/users/(?<user_id>[^/]+) {
      proxy_pass http://localhost:8000/usrmgmt/users/$user_id;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
 
  # Get Friends Count (GET)
  location ~ ^/u/friends/(?<user_id>[^/]+)/count {
      proxy_pass http://localhost:8000/usrmgmt/friends/$user_id/count;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Get user id for given index No (GET)
  location ~ ^/u/indexnos/(?<index_no>[^/]+) {
      proxy_pass http://localhost:8000/usrmgmt/indexnos/$index_no;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # list media and role is dynamically seleted (GET)
  location ~ ^/t/r/media/(?<img_owner_id>[^/]+) {
      proxy_pass http://localhost:8001/timeline/r/media/$img_owner_id?$args;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
 
  # List friend request (GET)
  location /u/friend_req {
    proxy_pass http://localhost:8000/usrmgmt/friend_req?$args;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  } 

  # Get friend requests count
  location /u/friend_req/count {
    proxy_pass http://localhost:8000/usrmgmt/friend_req/count;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

   # Ignore Friend Request (DELETE)
  location ~ ^/u/friend_req/(?<friend_req_id>[^/]+)/ignore {
      proxy_pass http://localhost:8000/usrmgmt/friend_req/$friend_req_id?$args;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
  
   # Accept Friend Request (POST)
  location ~ ^/u/friend_req/(?<friend_req_id>[^/]+) {
      proxy_pass http://localhost:8000/usrmgmt/friend_req/$friend_req_id;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

   # List Friends For Pool (GET)
  location ~ ^/t/friend_sugs/v2/(?<faculty>[^/]+) {
      proxy_pass http://localhost:8001/timeline/friend_sugs/v2/$faculty?$args;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

   # Send Friend Request (POST)
  location /p/u/friend_req {
    proxy_pass http://localhost:8000/usrmgmt/friend_req;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

   # Remove friendship (DELETE)
  location ~ ^/d/u/friend/(?<otherFriendId>[^/]+) {
      proxy_pass http://localhost:8000/usrmgmt/friend/$otherFriendId;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

   # List my Friends (GET)
  location /g/u/all/friends {
      proxy_pass http://localhost:8000/usrmgmt/all/friends?$args;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
 
  # Content server image render
    location ~ ^/g/c/images/(?<namespace>[^/]+)/(?<imgId>[^/]+) {
      proxy_pass http://127.0.0.1:8002/content/images/$namespace/$imgId?$args;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

   # List all events (GET)
  location /g/s/events {
      proxy_pass http://localhost:8003/space/events?$args;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

   # List all events (GET)
  location /g/s/my/events {
      proxy_pass http://localhost:8003/space/my/events?$args;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  
  # Create event reaction (POST)
  location ~ ^/p/s/events/(?<eventKey>[^/]+)/reaction {
      proxy_pass http://localhost:8003/space/events/$eventKey/reaction;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Set event reaction state (PUT)
  location ~ ^/pu/s/events/reactions/(?<reactionKey>[^/]+)/(?<reactionType>[^/]+)/(?<state>[^/]+) {
      proxy_pass http://localhost:8003/space/events/reactions/$reactionKey/$reactionType/$state;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # List event react user (GET)
  location ~ ^/g/s/events/(?<eventKey>[^/]+)/(?<reactionType>[^/]+) {
      proxy_pass http://localhost:8003/space/events/$eventKey/$reactionType?$args;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Upload image (POST)
  location ~ ^/p/c/images/(?<namespace>[^/]+) {
      proxy_pass http://127.0.0.1:8002/content/images/$namespace?$args;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Create Event (POST)
  location /p/s/events {
      proxy_pass http://127.0.0.1:8003/space/events;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

    # Create Image Post (POST)
  location /p/t/posts/image {
      proxy_pass http://127.0.0.1:8001/timeline/posts/image;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Delete Image Post (DELETE)
  location ~ ^/d/t/posts/image/(?<mediaKey>[^/]+) {
      proxy_pass http://127.0.0.1:8001/timeline/posts/image/$mediaKey;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Delete event (DELETE)
  location ~ ^/d/s/events/(?<eventKey>[^/]+) {
      proxy_pass http://127.0.0.1:8003/space/events/$eventKey;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Get Search Results (GET)
  location /g/se/users {
      proxy_pass http://127.0.0.1:8004/search/users?$args;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Update User Profile Info (PUT)
  location /pu/u/profile/edit {
      proxy_pass http://localhost:8000/usrmgmt/profile/edit;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Delete User Profile (DELETE)
  location /d/u/profile {
      proxy_pass http://localhost:8000/usrmgmt/profile;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Reset User Password (PUT)
  location /pu/u/profile/password {
      proxy_pass http://127.0.0.1:8000/usrmgmt/profile/password;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Get access token (POST)
  location /p/u/auth/token {
      proxy_pass http://127.0.0.1:8000/usrmgmt/auth/token;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Account creation link (POST)
  location /p/u/auth/reg-link {
      proxy_pass http://127.0.0.1:8000/usrmgmt/auth/reg-link;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
 
  # Account creation link validate (POST)
  location /p/u/auth/reg-link/validate {
      proxy_pass http://127.0.0.1:8000/usrmgmt/auth/reg-link/validate;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Account creation (POST)
  location /p/u/auth/reg {
      proxy_pass http://127.0.0.1:8000/usrmgmt/auth/reg;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

    # List boarding ads (GET)
  location /g/bdf/ads {
      proxy_pass http://127.0.0.1:8005/bdfinder/ads?$args;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Get an Ad (GET)
  location ~ ^/g/bdf/ads/(?<adKey>[^/]+) {
      proxy_pass http://127.0.0.1:8005/bdfinder/ads/$adKey;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Validate boarding user (POST)
  location /p/bdf/users/validate {
      proxy_pass http://127.0.0.1:8005/bdfinder/users/validate;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Create boarding owner (POST)
  location /p/bdf/auth/owner {
      proxy_pass http://127.0.0.1:8005/bdfinder/auth/owner;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
    # Create boarding Ad (POST)
  location /p/bdf/ads {
      proxy_pass http://127.0.0.1:8005/bdfinder/ads;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

    # Send a Password Reset Link (POST)
    location /p/u/auth/password/reset-link {
        proxy_pass http://127.0.0.1:8000/usrmgmt/auth/password/reset-link;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Forget password reset (POST)
    location /p/u/auth/password/reset {
        proxy_pass http://127.0.0.1:8000/usrmgmt/auth/password/reset;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Forgot password link validation (POST)
    location /p/u/auth/password/reset-validation {
        proxy_pass http://127.0.0.1:8000/usrmgmt/auth/password/reset-validation;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # List anytype post (GET)
    location /g/t/posts/anytype {
        proxy_pass http://127.0.0.1:8001/timeline/posts/anytype?$args;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
